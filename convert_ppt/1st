import os
from docx import Document
from transformers import pipeline

def load_model(model_name):
    try:
        return pipeline('text-generation', model=model_name)
    except Exception as e:
        print(f"Error loading model: {e}")
        return None

def open_document(file_path):
    if not os.path.exists(file_path):
        print(f"File does not exist: {file_path}")
        return None

    try:
        return Document(file_path)
    except Exception as e:
        print(f"Error opening document: {e}")
        return None

def generate_text(generator, prompt, max_length):
    try:
        # Truncate the prompt to the model's maximum sequence length minus 1
        prompt_tokens = generator.tokenizer.tokenize(prompt)
        if len(prompt_tokens) > generator.model.config.max_position_embeddings - 1:
            prompt_tokens = prompt_tokens[:generator.model.config.max_position_embeddings - 1]
        prompt = generator.tokenizer.convert_tokens_to_string(prompt_tokens)

        # Generate text
        return generator(prompt, max_length=max_length)[0]['generated_text']
    except Exception as e:
        print(f"Error generating text: {e}")
        return None

def save_document(doc, file_path):
    try:
        doc.save(file_path)
    except Exception as e:
        print(f"Error saving document: {e}")

def main():
    generator = load_model('gpt2')
    if generator is None:
        return

    doc = open_document('output.docx')
    if doc is None:
        return

    title = ''
    for para in doc.paragraphs:
        if para.text:  # assuming the title is the first non-empty paragraph
            if title == '':
                title = para.text
            else:
                prompt = title
                generated = generate_text(generator, prompt, 500)
                if generated is None:
                    return

                content = generated[len(prompt):]
                para.add_run(content)
                title = ''

    save_document(doc, "updated_doc.docx")

if __name__ == "__main__":
    main()
